
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xea_\xcb\xb2@\xe1\x9f\x0cto\xec\x170v\x91p'
    
_lr_action_items = {'REGEX':([39,],[46,]),'TYPE_1PARAM':([12,],[20,]),'CONSTRAINT':([18,24,33,34,35,42,56,59,],[28,-27,-24,-26,-27,-25,-14,-15,]),'CONSTR_1PARAM':([28,],[37,]),'FILL_METHOD_1PARAM':([19,],[29,]),'FILL_METHOD_NOPARAM':([19,],[30,]),'NUMBER':([26,31,44,],[36,41,53,]),'RPAREN':([36,40,41,46,47,48,49,53,58,],[43,50,51,-21,-20,-22,55,57,-23,]),'EOL':([13,21,22,24,35,38,43,50,51,55,57,],[24,24,-12,35,35,24,24,24,-13,24,24,]),'DOUBLE_COLON':([1,7,14,15,18,24,25,27,33,34,35,42,45,52,56,59,60,],[6,-27,-6,6,-8,-27,-5,-9,-24,-26,-27,-25,-16,-7,-14,-15,-17,]),'COLON':([4,48,],[10,54,]),'TYPE_NOPARAM':([12,],[22,]),'LPAREN':([17,20,29,30,37,],[26,31,39,40,44,]),'PATH':([39,],[47,]),'FILL':([11,24,32,33,34,35,42,],[19,-27,-11,-24,-26,-27,-25,]),'TABLE':([0,2,7,8,9,14,15,16,18,24,25,27,33,34,35,42,45,56,59,60,],[4,-27,-27,-3,4,-6,-4,-2,-8,-27,-5,-9,-24,-26,-27,-25,-16,-14,-15,-17,]),'IDENTIFIER':([6,10,39,54,],[13,17,48,58,]),'TYPE':([5,23,24,33,34,35,42,],[12,-10,-27,-24,-26,-27,-25,]),'CONSTR_NOPARAM':([28,],[38,]),'$end':([2,3,7,8,9,14,15,16,18,24,25,27,33,34,35,42,45,56,59,60,],[-27,0,-27,-3,-1,-6,-4,-2,-8,-27,-5,-9,-24,-26,-27,-25,-16,-14,-15,-17,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'tableHeader':([0,9,],[1,1,]),'constraintPart':([18,],[27,]),'fillMethod':([11,],[18,]),'tableBlock':([0,9,],[2,16,]),'moreAttributes':([7,],[15,]),'dataType':([5,],[11,]),'attributeName':([1,15,],[5,5,]),'moreBlocks':([2,],[9,]),'dtypes':([12,],[21,]),'dsl':([0,],[3,]),'attributeBlock':([1,15,],[7,25,]),'endline':([13,21,38,43,50,55,57,],[23,32,45,52,56,59,60,]),'parameter':([39,],[49,]),'empty':([2,7,24,35,],[8,14,34,34,]),'extraEndline':([24,35,],[33,42,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> dsl","S'",1,None,None,None),
  ('dsl -> tableBlock moreBlocks','dsl',2,'p_dsl','/home/re/sql-data-farmer/Seeder/lex_parse.py',240),
  ('moreBlocks -> moreBlocks tableBlock','moreBlocks',2,'p_moreBlocks','/home/re/sql-data-farmer/Seeder/lex_parse.py',245),
  ('moreBlocks -> empty','moreBlocks',1,'p_moreBlocks','/home/re/sql-data-farmer/Seeder/lex_parse.py',246),
  ('tableBlock -> tableHeader attributeBlock moreAttributes','tableBlock',3,'p_tableBlock','/home/re/sql-data-farmer/Seeder/lex_parse.py',256),
  ('moreAttributes -> moreAttributes attributeBlock','moreAttributes',2,'p_moreAttributes','/home/re/sql-data-farmer/Seeder/lex_parse.py',261),
  ('moreAttributes -> empty','moreAttributes',1,'p_moreAttributes','/home/re/sql-data-farmer/Seeder/lex_parse.py',262),
  ('tableHeader -> TABLE COLON IDENTIFIER LPAREN NUMBER RPAREN endline','tableHeader',7,'p_tableHeader','/home/re/sql-data-farmer/Seeder/lex_parse.py',267),
  ('attributeBlock -> attributeName dataType fillMethod','attributeBlock',3,'p_attributeBlock','/home/re/sql-data-farmer/Seeder/lex_parse.py',280),
  ('attributeBlock -> attributeName dataType fillMethod constraintPart','attributeBlock',4,'p_attributeBlock','/home/re/sql-data-farmer/Seeder/lex_parse.py',281),
  ('attributeName -> DOUBLE_COLON IDENTIFIER endline','attributeName',3,'p_attributeName','/home/re/sql-data-farmer/Seeder/lex_parse.py',291),
  ('dataType -> TYPE dtypes endline','dataType',3,'p_dataType','/home/re/sql-data-farmer/Seeder/lex_parse.py',302),
  ('dtypes -> TYPE_NOPARAM','dtypes',1,'p_dtypes','/home/re/sql-data-farmer/Seeder/lex_parse.py',307),
  ('dtypes -> TYPE_1PARAM LPAREN NUMBER RPAREN','dtypes',4,'p_dtypes','/home/re/sql-data-farmer/Seeder/lex_parse.py',308),
  ('fillMethod -> FILL FILL_METHOD_NOPARAM LPAREN RPAREN endline','fillMethod',5,'p_fillMethod','/home/re/sql-data-farmer/Seeder/lex_parse.py',321),
  ('fillMethod -> FILL FILL_METHOD_1PARAM LPAREN parameter RPAREN endline','fillMethod',6,'p_fillMethod','/home/re/sql-data-farmer/Seeder/lex_parse.py',322),
  ('constraintPart -> CONSTRAINT CONSTR_NOPARAM endline','constraintPart',3,'p_constraintPart','/home/re/sql-data-farmer/Seeder/lex_parse.py',338),
  ('constraintPart -> CONSTRAINT CONSTR_1PARAM LPAREN NUMBER RPAREN endline','constraintPart',6,'p_constraintPart','/home/re/sql-data-farmer/Seeder/lex_parse.py',339),
  ('parameters -> parameters parameter','parameters',2,'p_parameters','/home/re/sql-data-farmer/Seeder/lex_parse.py',365),
  ('parameters -> empty','parameters',1,'p_parameters','/home/re/sql-data-farmer/Seeder/lex_parse.py',366),
  ('parameter -> PATH','parameter',1,'p_parameter','/home/re/sql-data-farmer/Seeder/lex_parse.py',370),
  ('parameter -> REGEX','parameter',1,'p_parameter','/home/re/sql-data-farmer/Seeder/lex_parse.py',371),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter','/home/re/sql-data-farmer/Seeder/lex_parse.py',372),
  ('parameter -> IDENTIFIER COLON IDENTIFIER','parameter',3,'p_parameter','/home/re/sql-data-farmer/Seeder/lex_parse.py',373),
  ('endline -> EOL extraEndline','endline',2,'p_endline','/home/re/sql-data-farmer/Seeder/lex_parse.py',382),
  ('extraEndline -> EOL extraEndline','extraEndline',2,'p_extraEndline','/home/re/sql-data-farmer/Seeder/lex_parse.py',386),
  ('extraEndline -> empty','extraEndline',1,'p_extraEndline','/home/re/sql-data-farmer/Seeder/lex_parse.py',387),
  ('empty -> <empty>','empty',0,'p_empty','/home/re/sql-data-farmer/Seeder/lex_parse.py',392),
]
